@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<section id="contact" class="contact section light-background">
    <div class="container section-title" data-aos="fade-up">
        <h2>Contact</h2>
        <p>Get in touch with us for any inquiries or feedback.</p>
    </div>

    <div class="mb-5" data-aos="fade-up" data-aos-delay="200">
        <iframe style="border:0; width: 100%; height: 270px;"
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3399.275452406809!2d74.30749397415998!3d31.571493444617015!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39191d15ddbf0d09%3A0xc564a7eaf4520224!2sKbw%20old%20campus%20hostel!5e0!3m2!1sen!2s!4v1743774509446!5m2!1sen!2s"
                frameborder="0" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade">
        </iframe>
    </div>

    <div class="container" data-aos="fade-up" data-aos-delay="100">
        <div class="row gy-4">
            <div class="col-lg-4">
                <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="300">
                    <i class="bi bi-geo-alt flex-shrink-0"></i>
                    <div>
                        <h3>Location</h3>
                        <a href="https://maps.app.goo.gl/zGFGEZBdGiNipVz66" target="_blank">DocDirect</a>
                    </div>
                </div>
                <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="400">
                    <i class="bi bi-telephone flex-shrink-0"></i>
                    <div>
                        <h3>Call Us</h3>
                        <a href="tel:+923266180749">+92 326 6180749</a>
                    </div>
                </div>
                <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="500">
                    <i class="bi bi-envelope flex-shrink-0"></i>
                    <div>
                        <h3>Email Us</h3>
                        <a href="mailto:usmanalim015@gmail.com">usmanalim015@gmail.com</a>
                    </div>
                </div>
            </div>
            <div class="col-lg-8">
                <EditForm Model="@contactForm" OnValidSubmit="@HandleSubmit" class="php-email-form" data-aos="fade-up" data-aos-delay="200">
                    <DataAnnotationsValidator />
                    <div class="row gy-4">
                        <div class="col-md-6">
                            <InputText class="form-control" @bind-Value="contactForm.Name" placeholder="Your Name" />
                            <ValidationMessage For="@(() => contactForm.Name)" />
                        </div>
                        <div class="col-md-6">
                            <InputText class="form-control" @bind-Value="contactForm.Email" placeholder="Your Email" />
                            <ValidationMessage For="@(() => contactForm.Email)" />
                        </div>
                        <div class="col-md-12">
                            <InputText class="form-control" @bind-Value="contactForm.Subject" placeholder="Subject" />
                            <ValidationMessage For="@(() => contactForm.Subject)" />
                        </div>
                        <div class="col-md-12">
                            <InputTextArea class="form-control" @bind-Value="contactForm.Message" rows="6" placeholder="Message" />
                            <ValidationMessage For="@(() => contactForm.Message)" />
                        </div>
                        <div class="col-md-12 text-center">
                            <div class="loading" style="@(isLoading ? "display: block;" : "display: none;")">Loading</div>
                            <div class="error-message" style="@(string.IsNullOrEmpty(errorMessage) ? "display: none;" : "display: block;")">@errorMessage</div>
                            <div class="sent-message" style="@(string.IsNullOrEmpty(successMessage) ? "display: none;" : "display: block;")">@successMessage</div>
                            <button type="submit" disabled="@isLoading">Send Message</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</section>

<style>
    .php-email-form .loading,
    .php-email-form .error-message,
    .php-email-form .sent-message {
        display: none;
    }

    .php-email-form .loading {
        color: var(--accent-color);
        font-weight: bold;
    }

    .php-email-form .error-message {
        color: #dc3545;
        font-weight: bold;
    }

    .php-email-form .sent-message {
        color: white;
        font-weight: bold;
    }
</style>

@code {
    private ContactFormModel contactForm = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    public class ContactFormModel
    {
        [Required(ErrorMessage = "Name is required")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Subject is required")]
        public string Subject { get; set; } = string.Empty;

        [Required(ErrorMessage = "Message is required")]
        public string Message { get; set; } = string.Empty;
    }

    private async Task HandleSubmit()
    {
        isLoading = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;
        await JSRuntime.InvokeVoidAsync("eval", "document.querySelector('.loading').style.display = 'block';");

        try
        {
            var formData = new
            {
                name = contactForm.Name,
                email = contactForm.Email,
                subject = contactForm.Subject,
                message = contactForm.Message
            };

            var response = await HttpClient.PostAsJsonAsync("https://formspree.io/f/xvgalnyw", formData);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Your message has been sent. Thank you!";
                await JSRuntime.InvokeVoidAsync("eval", "document.querySelector('.sent-message').style.display = 'block';");
                contactForm = new ContactFormModel(); // Reset form
            }
            else
            {
                errorMessage = "Failed to send your message. Please try again later.";
                await JSRuntime.InvokeVoidAsync("eval", "document.querySelector('.error-message').style.display = 'block';");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
            await JSRuntime.InvokeVoidAsync("eval", "document.querySelector('.error-message').style.display = 'block';");
        }
        finally
        {
            isLoading = false;
            await JSRuntime.InvokeVoidAsync("eval", "document.querySelector('.loading').style.display = 'none';");
        }
    }
}