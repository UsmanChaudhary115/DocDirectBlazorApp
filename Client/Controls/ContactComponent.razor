@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient
@inject IJSRuntime JS

<section id="contact" class="contact section light-background">
    <div class="container section-title" data-aos="fade-up">
        <h2>Contact</h2>
        <p>Get in touch with us for any inquiries or feedback.</p>
    </div>

    <div class="mb-5" data-aos="fade-up" data-aos-delay="200">
        <iframe style="border:0; width: 100%; height: 270px;"
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3399.275452406809!2d74.30749397415998!3d31.571493444617015!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39191d15ddbf0d09%3A0xc564a7eaf4520224!2sKbw%20old%20campus%20hostel!5e0!3m2!1sen!2s!4v1743774509446!5m2!1sen!2s"
                frameborder="0" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade">
        </iframe>
    </div>

    <div class="container" data-aos="fade-up" data-aos-delay="100">
        <div class="row gy-4">
            <div class="col-lg-4">
                <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="300">
                    <i class="bi bi-geo-alt flex-shrink-0"></i>
                    <div>
                        <h3>Location</h3>
                        <a href="https://maps.app.goo.gl/zGFGEZBdGiNipVz66" target="_blank">DocDirect</a>
                    </div>
                </div>
                <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="400">
                    <i class="bi bi-telephone flex-shrink-0"></i>
                    <div>
                        <h3>Call Us</h3>
                        <a href="tel:+923266180749">+92 326 6180749</a>
                    </div>
                </div>
                <div class="info-item d-flex" data-aos="fade-up" data-aos-delay="500">
                    <i class="bi bi-envelope flex-shrink-0"></i>
                    <div>
                        <h3>Email Us</h3>
                        <a href="mailto:usmanalim015@gmail.com">usmanalim015@gmail.com</a>
                    </div>
                </div>
            </div>

            <div class="col-lg-8 py-3">
                <EditForm Model="@FormModel" OnValidSubmit="@HandleSubmit" id="contact-form">
                    <DataAnnotationsValidator />
                    <div class="row gy-4">
                        <div class="col-md-6">
                            <label for="name" class="form-label">Name</label>
                            <InputText id="name" class="form-control" @bind-Value="@FormModel.Name" placeholder="Your Name" />
                            <ValidationMessage For="@(() => FormModel.Name)" />
                        </div>
                        <div class="col-md-6">
							<label for="email" class="form-label">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="@FormModel.Email" placeholder="Your Email" />
                            <ValidationMessage For="@(() => FormModel.Email)" />
                        </div>
                        <div class="col-md-12">
							<label for="subject" class="form-label">Subject</label>
                            <InputText id="subject" class="form-control" @bind-Value="@FormModel.Subject" placeholder="Subject" />
                            <ValidationMessage For="@(() => FormModel.Subject)" />
                        </div>
                        <div class="col-md-12">
							<label for="message" class="form-label">Message</label>
                            <InputTextArea id="message" class="form-control" @bind-Value="@FormModel.Message" rows="6" placeholder="Message" />
                            <ValidationMessage For="@(() => FormModel.Message)" />
                        </div>
                        <div class="col-md-12 text-center">
                            <div class="loading" style="@(IsSubmitting ? "display: block;" : "display: none;")">Loading</div>
                            <div class="error-message" role="alert" style="@(!string.IsNullOrEmpty(ErrorMessage) ? "display: block;" : "display: none;")">@ErrorMessage</div>
                            <div class="sent-message" role="alert" style="@(IsSuccess ? "display: block;" : "display: none;")">Your message has been sent. Thank you!</div>
                            <button type="submit" class="btn btn-danger px-4 py-2 shadow" disabled="@IsSubmitting">
                                @(IsSubmitting ? "Sending..." : "Send Message")
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</section>

<style>
    .error-message {
        display: none;
        background: #df1529;
        color: #ffffff;
        text-align: left;
        padding: 15px;
        margin-bottom: 24px;
        font-weight: 600;
    }

    .sent-message {
        display: none;
        background: #059652;
        color: #ffffff;
        text-align: center;
        padding: 15px;
        margin-bottom: 24px;
        font-weight: 600;
    }

    .loading {
        display: none;
        background: var(--surface-color, #e0e0e0);
        text-align: center;
        padding: 15px;
        margin-bottom: 24px;
        font-weight: 600;
    }

        .loading::before {
            content: "";
            display: inline-block;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            margin: 0 10px -6px 0;
            border: 3px solid var(--accent-color, #007bff);
            border-top-color: var(--surface-color, #e0e0e0);
            animation: php-email-form-loading 1s linear infinite;
        }
</style>

@code {
    private ContactFormModel FormModel { get; set; } = new();
    private bool IsSubmitting { get; set; }
    private string ErrorMessage { get; set; } = string.Empty;
    private bool IsSuccess { get; set; }

    private class ContactFormModel
    {
        [Required(ErrorMessage = "Name is required.")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Subject is required.")]
        public string Subject { get; set; } = string.Empty;

        [Required(ErrorMessage = "Message is required.")]
        public string Message { get; set; } = string.Empty;
    }

    private async Task HandleSubmit()
    {
        IsSubmitting = true;
        ErrorMessage = string.Empty;
        IsSuccess = false;

        try
        {
            // Call JS method (optional)
            await JS.InvokeVoidAsync("submitContactForm", FormModel.Name, FormModel.Email, FormModel.Subject, FormModel.Message);


                            IsSuccess = true;
            FormModel = new ContactFormModel(); // Reset form
            StateHasChanged();
        }
        catch
        {
            ErrorMessage = "An error occurred. Please try again.";
        }
        finally
        {
            IsSubmitting = false;
        }
    }
}
