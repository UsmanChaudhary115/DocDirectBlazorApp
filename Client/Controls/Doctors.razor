@using Shared.Entities
@inject HttpClient Http
<section id="doctors" class="doctors section">
    <div class="container section-title" data-aos="fade-up">
        <h2>Doctors</h2>
        <p>Meet our team of highly skilled doctors</p>
    </div>
    <div class="container">
        <div class="row gy-4">
            @if (doctors != null && doctors.Any())
            {
                @foreach (var doctor in doctors)
                {
                    <div class="col-lg-6" data-aos="fade-up">
                        <div class="team-member d-flex align-items-start">
                            <div class="member-info">
                                <h4>@doctor.Name</h4>
                                <span>@doctor.Specialization</span>
                                <div class="social">
                                    <a href=@doctor.XAccountLink><i class="bi bi-twitter-x"></i></a>
                                    <a href=@doctor.FacebookAccountLink><i class="bi bi-facebook"></i></a>
                                    <a href=@doctor.InstagramAccountLink><i class="bi bi-instagram"></i></a>
                                    <a href=@doctor.LinkedinAccountLink><i class="bi bi-linkedin"></i></a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No doctors available at the moment.</p>
            }
        </div>
    </div>
</section>

@code {
    private List<Doctor> doctors;

	protected override async Task OnInitializedAsync()
	{
        doctors = await Http.GetFromJsonAsync<List<Doctor>>("/api/Doctors/GetAllDoctors");
	}
}
